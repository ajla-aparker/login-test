import React from 'react';
declare type ModalProps = {
    title?: React.ReactNode;
    children: React.ReactNode;
    actions?: React.ReactNode;
    className?: string;
};
/** Modal UI component */
export declare const Modal: ({ title, children, actions, className, }: ModalProps) => React.ReactElement;
/** Overlay UI component (grey background) */
export declare const Overlay: () => React.ReactElement;
/** Modal positioning component */
export declare const ModalContainer: ({ children, }: {
    children: React.ReactNode;
}) => React.ReactElement;
/** connectModal and useModal package the logic & state of opening/closing a modal */
export interface ConnectedModalProps {
    isOpen: boolean;
    onClose: () => void;
}
export declare const connectModal: <P extends ConnectedModalProps>(Component: React.ComponentType<P>) => React.FunctionComponent<P>;
export declare type ModalHook = {
    isOpen: boolean;
    openModal: () => void;
    closeModal: () => void;
};
export declare const useModal: () => ModalHook;
export {};
