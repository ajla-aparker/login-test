{"ast":null,"code":"var _jsxFileName = \"/home/adam/code/login-form/src/components/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { Alert, Button, Fieldset, Form, Label, TextInput, ValidationChecklist, ValidationItem } from '@trussworks/react-uswds';\nimport { useState } from 'react';\nimport '@trussworks/react-uswds/lib/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mockSubmit = () => {};\n\nconst LoginForm = () => {\n  _s();\n\n  const [validations, setValidations] = useState({\n    uppercase: false,\n    numerical: false\n  });\n\n  const validateInput = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    const updatedValidations = {};\n    Object.keys(validations).forEach(validator => {\n      updatedValidations[validator] = validate(validator, value);\n    });\n    setValidations({ ...validations,\n      ...updatedValidations\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: mockSubmit,\n    large: true,\n    children: /*#__PURE__*/_jsxDEV(Fieldset, {\n      legend: \"Sign In\",\n      legendStyle: \"large\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"or \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"javascript:void(0);\",\n          children: \"create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"info\",\n        validation: true,\n        heading: \"Code Requirements\",\n        children: /*#__PURE__*/_jsxDEV(ValidationChecklist, {\n          id: \"validate-code\",\n          children: [/*#__PURE__*/_jsxDEV(ValidationItem, {\n            id: \"uppercase\",\n            isValid: validations.uppercase,\n            children: \"Use at least one uppercase character\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ValidationItem, {\n            id: \"numerical\",\n            isValid: validations.numerical,\n            children: \"Use at least one number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"username\",\n        children: \"Username or email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        id: \"username\",\n        name: \"username\",\n        type: \"text\",\n        autoCapitalize: \"off\",\n        autoCorrect: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"password-sign-in\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        id: \"password-sign-in\",\n        name: \"password-sign-in\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"usa-form__note\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          title: \"Show password\",\n          href: \"javascript:void(0);\",\n          className: \"usa-show-password\",\n          \"aria-controls\": \"password-sign-in\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"javascript:void(0);\",\n          title: \"Forgot username\",\n          children: \"Forgot username?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"javascript:void(0);\",\n          title: \"Forgot password\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"ZPRxodc4GvLwhxJ/81T8zqPeLaw=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/adam/code/login-form/src/components/LoginForm.jsx"],"names":["Alert","Button","Fieldset","Form","Label","TextInput","ValidationChecklist","ValidationItem","useState","mockSubmit","LoginForm","validations","setValidations","uppercase","numerical","validateInput","event","target","value","updatedValidations","Object","keys","forEach","validator","validate"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,IAAlC,EAAwCC,KAAxC,EAA+CC,SAA/C,EAA0DC,mBAA1D,EAA+EC,cAA/E,QAAqG,yBAArG;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,uCAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM,CAAE,CAA3B;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC;AAC7CK,IAAAA,SAAS,EAAE,KADkC;AAE7CC,IAAAA,SAAS,EAAE;AAFkC,GAAD,CAA9C;;AAKA,QAAMC,aAAa,GAAIC,KAAD,IAAgD;AACpE,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFF,KAFJ;AAGA,UAAMG,kBAAkB,GAAG,EAA3B;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYV,WAAZ,EAAyBW,OAAzB,CAAkCC,SAAD,IAAe;AAE9CJ,MAAAA,kBAAkB,CAACI,SAAD,CAAlB,GAAgCC,QAAQ,CAACD,SAAD,EAAYL,KAAZ,CAAxC;AACD,KAHD;AAKAN,IAAAA,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkB,SAAGQ;AAArB,KAAD,CAAd;AACD,GAZD;;AAcA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEV,UAAhB;AAA4B,IAAA,KAAK,MAAjC;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,MAAM,EAAC,SAAjB;AAA2B,MAAA,WAAW,EAAC,OAAvC;AAAA,8BACE;AAAA,uCACK;AAAG,UAAA,IAAI,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADL;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,UAAU,MAA7B;AAA8B,QAAA,OAAO,EAAC,mBAAtC;AAAA,+BACE,QAAC,mBAAD;AAAqB,UAAA,EAAE,EAAC,eAAxB;AAAA,kCACE,QAAC,cAAD;AAAgB,YAAA,EAAE,EAAC,WAAnB;AAA+B,YAAA,OAAO,EAAEE,WAAW,CAACE,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,cAAD;AAAgB,YAAA,EAAE,EAAC,WAAnB;AAA+B,YAAA,OAAO,EAAEF,WAAW,CAACG,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAcE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,cAAc,EAAC,KAJjB;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cAfF,eAsBE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,eAuBE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,IAAI,EAAC,kBAFP;AAGE,QAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,cAvBF,eA4BE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,+BACE;AACE,UAAA,KAAK,EAAC,eADR;AAEE,UAAA,IAAI,EAAC,qBAFP;AAGE,UAAA,SAAS,EAAC,mBAHZ;AAIE,2BAAc,kBAJhB;AAKE,UAAA,OAAO,EAAE,MAAM,CAAE;AALnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA5BF,eAuCE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCF,eAwCE;AAAA,+BACE;AAAG,UAAA,IAAI,EAAC,qBAAR;AAA8B,UAAA,KAAK,EAAC,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxCF,eA6CE;AAAA,+BACE;AAAG,UAAA,IAAI,EAAC,qBAAR;AAA8B,UAAA,KAAK,EAAC,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA7CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CA3ED;;GAAMJ,S;;KAAAA,S;AA6EN,eAAeA,SAAf","sourcesContent":["import { Alert, Button, Fieldset, Form, Label, TextInput, ValidationChecklist, ValidationItem } from '@trussworks/react-uswds';\nimport { useState } from 'react';\nimport '@trussworks/react-uswds/lib/index.css'\n\nconst mockSubmit = () => {};\n\n\nconst LoginForm = () => {\n  const [validations, setValidations] = useState({\n    uppercase: false,\n    numerical: false,\n  })\n  \n  const validateInput = (event: ChangeEvent<HTMLInputElement>): void => {\n    const {\n      target: { value },\n    } = event\n    const updatedValidations = {}\n  \n    Object.keys(validations).forEach((validator) => {\n      \n      updatedValidations[validator] = validate(validator, value)\n    })\n  \n    setValidations({ ...validations, ...updatedValidations })\n  }\n\n  return (\n    <Form onSubmit={mockSubmit} large>\n      <Fieldset legend=\"Sign In\" legendStyle=\"large\">\n        <span>\n          or <a href=\"javascript:void(0);\">create an account</a>\n        </span>\n        <Alert type=\"info\" validation heading=\"Code Requirements\">\n          <ValidationChecklist id=\"validate-code\">\n            <ValidationItem id=\"uppercase\" isValid={validations.uppercase}>\n              Use at least one uppercase character\n            </ValidationItem>\n            <ValidationItem id=\"numerical\" isValid={validations.numerical}>\n              Use at least one number\n            </ValidationItem>\n          </ValidationChecklist>\n        </Alert>\n        <Label htmlFor=\"username\">Username or email address</Label>\n        <TextInput\n          id=\"username\"\n          name=\"username\"\n          type=\"text\"\n          autoCapitalize=\"off\"\n          autoCorrect=\"off\"\n        />\n        <Label htmlFor=\"password-sign-in\">Password</Label>\n        <TextInput\n          id=\"password-sign-in\"\n          name=\"password-sign-in\"\n          type=\"password\"\n        />\n        <p className=\"usa-form__note\">\n          <a\n            title=\"Show password\"\n            href=\"javascript:void(0);\"\n            className=\"usa-show-password\"\n            aria-controls=\"password-sign-in\"\n            onClick={() => {}}\n          >\n          </a>\n        </p>\n\n        <Button type=\"submit\">Sign in</Button>\n        <p>\n          <a href=\"javascript:void(0);\" title=\"Forgot username\">\n            Forgot username?\n          </a>\n        </p>\n        <p>\n          <a href=\"javascript:void(0);\" title=\"Forgot password\">\n            Forgot password?\n          </a>\n        </p>\n      </Fieldset>\n    </Form>\n  )\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}