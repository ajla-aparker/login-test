{"ast":null,"code":"var _jsxFileName = \"/home/adam/code/login-form/src/components/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { Alert, Button, Fieldset, Form, Label, TextInput, ValidationChecklist, ValidationItem } from '@trussworks/react-uswds';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport '@trussworks/react-uswds/lib/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required('Email is required').email('Email is invalid'),\n  password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters').max(40, 'Password must not exceed 40 characters')\n});\n\nconst LoginForm = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    large: true,\n    children: /*#__PURE__*/_jsxDEV(Fieldset, {\n      legend: \"Sign In\",\n      legendStyle: \"large\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"or \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"javascript:void(0);\",\n          children: \"create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.keys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"email\",\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        id: \"email\",\n        name: \"email\",\n        type: \"text\",\n        autoCapitalize: \"off\",\n        autoCorrect: \"off\",\n        ...register('email')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"password-sign-in\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        id: \"password-sign-in\",\n        name: \"password-sign-in\",\n        type: \"password\",\n        ...register('password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"usa-form__note\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          title: \"Show password\",\n          href: \"javascript:void(0);\",\n          className: \"usa-show-password\",\n          \"aria-controls\": \"password-sign-in\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: reset,\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"javascript:void(0);\",\n          title: \"Forgot username\",\n          children: \"Forgot username?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"javascript:void(0);\",\n          title: \"Forgot password\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"F372SiVXYlwlPcTvXEYo94zLupw=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/adam/code/login-form/src/components/LoginForm.jsx"],"names":["Alert","Button","Fieldset","Form","Label","TextInput","ValidationChecklist","ValidationItem","useForm","yupResolver","Yup","validationSchema","object","shape","email","string","required","password","min","max","LoginForm","register","handleSubmit","reset","formState","errors","resolver","keys"],"mappings":"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","sourcesContent":["import { Alert, Button, Fieldset, Form, Label, TextInput, ValidationChecklist, ValidationItem } from '@trussworks/react-uswds';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport '@trussworks/react-uswds/lib/index.css'\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .required('Email is required')\n    .email('Email is invalid'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(6, 'Password must be at least 6 characters')\n    .max(40, 'Password must not exceed 40 characters')\n});\n\nconst LoginForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  \n  return (\n    <Form onSubmit={handleSubmit} large>\n      <Fieldset legend=\"Sign In\" legendStyle=\"large\">\n        <span>\n          or <a href=\"javascript:void(0);\">create an account</a>\n        </span>\n        <span>{errors.keys}</span>\n        {/* {errors ? <Alert type=\"info\" validation heading=\"Code Requirements\">\n          <ValidationChecklist id=\"validate-code\">\n            <ValidationItem id=\"uppercase\" isValid={validations.uppercase}>\n              Use at least one uppercase character\n            </ValidationItem>\n            <ValidationItem id=\"numerical\" isValid={validations.numerical}>\n              Use at least one number\n            </ValidationItem>\n          </ValidationChecklist>\n        </Alert> : undefined} */}\n        <Label htmlFor=\"email\">Email address</Label>\n        <TextInput\n          id=\"email\"\n          name=\"email\"\n          type=\"text\"\n          autoCapitalize=\"off\"\n          autoCorrect=\"off\"\n          {...register('email')}\n        />\n        <Label htmlFor=\"password-sign-in\">Password</Label>\n        <TextInput\n          id=\"password-sign-in\"\n          name=\"password-sign-in\"\n          type=\"password\"\n          {...register('password')}\n        />\n        <p className=\"usa-form__note\">\n          <a\n            title=\"Show password\"\n            href=\"javascript:void(0);\"\n            className=\"usa-show-password\"\n            aria-controls=\"password-sign-in\"\n            onClick={() => {}}\n          >\n          </a>\n        </p>\n\n        <Button type=\"submit\" onClick={reset}>Sign in</Button>\n        <p>\n          <a href=\"javascript:void(0);\" title=\"Forgot username\">\n            Forgot username?\n          </a>\n        </p>\n        <p>\n          <a href=\"javascript:void(0);\" title=\"Forgot password\">\n            Forgot password?\n          </a>\n        </p>\n      </Fieldset>\n    </Form>\n  )\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}