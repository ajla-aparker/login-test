{"ast":null,"code":"import _objectSpread from\"/home/adam/code/ajla-aparker.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{Alert,Button,Fieldset,Form,Label,TextInput,ValidationChecklist,ValidationItem}from'@trussworks/react-uswds';import{useForm}from'react-hook-form';import{yupResolver}from'@hookform/resolvers/yup';import*as Yup from'yup';import'@trussworks/react-uswds/lib/index.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var validationSchema=Yup.object().shape({email:Yup.string().required('Email is required').email('Email is invalid'),password:Yup.string().required('Password is required')});var onSubmit=function onSubmit(data){return console.log(data);};var LoginForm=function LoginForm(){var _useForm=useForm({resolver:yupResolver(validationSchema)}),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.formState.errors;return/*#__PURE__*/_jsx(Form,{onSubmit:handleSubmit(onSubmit),large:true,children:/*#__PURE__*/_jsxs(Fieldset,{legend:\"Sign In\",legendStyle:\"large\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"or \",/*#__PURE__*/_jsx(\"a\",{href:\"#\",children:\"create an account\"})]}),errors.email||errors.password?/*#__PURE__*/_jsx(Alert,{type:\"info\",validation:true,heading:\"Form Requirements\",children:/*#__PURE__*/_jsxs(ValidationChecklist,{id:\"validate-code\",children:[/*#__PURE__*/_jsx(ValidationItem,{id:\"uppercase\",isValid:!errors.email,children:\"Email is invalid\"}),/*#__PURE__*/_jsx(ValidationItem,{id:\"numerical\",isValid:!errors.password,children:\"Password is required\"})]})}):undefined,/*#__PURE__*/_jsx(Label,{htmlFor:\"email\",children:\"Email address\"}),/*#__PURE__*/_jsx(TextInput,_objectSpread({id:\"email\",name:\"email\",type:\"text\",autoCapitalize:\"off\",autoCorrect:\"off\"},register('email'))),/*#__PURE__*/_jsx(Label,{htmlFor:\"password-sign-in\",children:\"Password\"}),/*#__PURE__*/_jsx(TextInput,_objectSpread({id:\"password-sign-in\",name:\"password-sign-in\",type:\"password\"},register('password'))),/*#__PURE__*/_jsx(\"p\",{className:\"usa-form__note\",children:/*#__PURE__*/_jsx(\"a\",{title:\"Show password\",href:\"#\",className:\"usa-show-password\",\"aria-controls\":\"password-sign-in\",onClick:function onClick(){}})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Sign in\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"#\",title:\"Forgot username\",children:\"Forgot username?\"})}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"#\",title:\"Forgot password\",children:\"Forgot password?\"})})]})});};export default LoginForm;","map":{"version":3,"sources":["/home/adam/code/ajla-aparker.github.io/src/components/LoginForm.jsx"],"names":["Alert","Button","Fieldset","Form","Label","TextInput","ValidationChecklist","ValidationItem","useForm","yupResolver","Yup","validationSchema","object","shape","email","string","required","password","onSubmit","data","console","log","LoginForm","resolver","register","handleSubmit","errors","formState","undefined"],"mappings":"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","sourcesContent":["import { Alert, Button, Fieldset, Form, Label, TextInput, ValidationChecklist, ValidationItem } from '@trussworks/react-uswds';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport '@trussworks/react-uswds/lib/index.css'\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .required('Email is required')\n    .email('Email is invalid'),\n  password: Yup.string()\n    .required('Password is required')\n});\n\nconst onSubmit = data => console.log(data);\n\nconst LoginForm = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  \n  return (\n    <Form onSubmit={handleSubmit(onSubmit)} large>\n      <Fieldset legend=\"Sign In\" legendStyle=\"large\">\n        <span>\n          or <a href=\"#\">create an account</a>\n        </span>\n        {errors.email || errors.password ? <Alert type=\"info\" validation heading=\"Form Requirements\">\n          <ValidationChecklist id=\"validate-code\">\n            <ValidationItem id=\"uppercase\" isValid={!errors.email}>\n              Email is invalid\n            </ValidationItem>\n            <ValidationItem id=\"numerical\" isValid={!errors.password}>\n              Password is required\n            </ValidationItem>\n          </ValidationChecklist>\n        </Alert> : undefined}\n        <Label htmlFor=\"email\">Email address</Label>\n        <TextInput\n          id=\"email\"\n          name=\"email\"\n          type=\"text\"\n          autoCapitalize=\"off\"\n          autoCorrect=\"off\"\n          {...register('email')}\n        />\n        <Label htmlFor=\"password-sign-in\">Password</Label>\n        <TextInput\n          id=\"password-sign-in\"\n          name=\"password-sign-in\"\n          type=\"password\"\n          {...register('password')}\n        />\n        <p className=\"usa-form__note\">\n          <a\n            title=\"Show password\"\n            href=\"#\"\n            className=\"usa-show-password\"\n            aria-controls=\"password-sign-in\"\n            onClick={() => {}}\n          >\n          </a>\n        </p>\n\n        <Button type=\"submit\">Sign in</Button>\n        <p>\n          <a href=\"#\" title=\"Forgot username\">\n            Forgot username?\n          </a>\n        </p>\n        <p>\n          <a href=\"#\" title=\"Forgot password\">\n            Forgot password?\n          </a>\n        </p>\n      </Fieldset>\n    </Form>\n  )\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}