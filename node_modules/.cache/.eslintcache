[{"/home/adam/code/login-form/src/index.js":"1","/home/adam/code/login-form/src/App.js":"2","/home/adam/code/login-form/src/reportWebVitals.js":"3","/home/adam/code/login-form/src/components/LoginForm.jsx":"4","/home/adam/code/ajla-aparker.github.io/src/index.js":"5","/home/adam/code/ajla-aparker.github.io/src/App.js":"6","/home/adam/code/ajla-aparker.github.io/src/components/LoginForm.jsx":"7"},{"size":219,"mtime":1628618807580,"results":"8","hashOfConfig":"9"},{"size":123,"mtime":1628614028680,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1628536344780,"results":"11","hashOfConfig":"12"},{"size":2454,"mtime":1628622872460,"results":"13","hashOfConfig":"9"},{"size":219,"mtime":1628623536450,"results":"14","hashOfConfig":"15"},{"size":123,"mtime":1628623536450,"results":"16","hashOfConfig":"15"},{"size":2454,"mtime":1628623536450,"results":"17","hashOfConfig":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ohupxg",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"sxv2cj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j8j1jk",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/home/adam/code/login-form/src/index.js",[],"/home/adam/code/login-form/src/App.js",[],"/home/adam/code/login-form/src/reportWebVitals.js",[],["34","35"],"/home/adam/code/login-form/src/components/LoginForm.jsx",["36","37","38","39"],"/home/adam/code/ajla-aparker.github.io/src/index.js",[],"/home/adam/code/ajla-aparker.github.io/src/App.js",[],"/home/adam/code/ajla-aparker.github.io/src/components/LoginForm.jsx",["40","41","42","43"],"import { Alert, Button, Fieldset, Form, Label, TextInput, ValidationChecklist, ValidationItem } from '@trussworks/react-uswds';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport '@trussworks/react-uswds/lib/index.css'\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .required('Email is required')\n    .email('Email is invalid'),\n  password: Yup.string()\n    .required('Password is required')\n});\n\nconst onSubmit = data => console.log(data);\n\nconst LoginForm = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  \n  return (\n    <Form onSubmit={handleSubmit(onSubmit)} large>\n      <Fieldset legend=\"Sign In\" legendStyle=\"large\">\n        <span>\n          or <a href=\"#\">create an account</a>\n        </span>\n        {errors.email || errors.password ? <Alert type=\"info\" validation heading=\"Form Requirements\">\n          <ValidationChecklist id=\"validate-code\">\n            <ValidationItem id=\"uppercase\" isValid={!errors.email}>\n              Email is invalid\n            </ValidationItem>\n            <ValidationItem id=\"numerical\" isValid={!errors.password}>\n              Password is required\n            </ValidationItem>\n          </ValidationChecklist>\n        </Alert> : undefined}\n        <Label htmlFor=\"email\">Email address</Label>\n        <TextInput\n          id=\"email\"\n          name=\"email\"\n          type=\"text\"\n          autoCapitalize=\"off\"\n          autoCorrect=\"off\"\n          {...register('email')}\n        />\n        <Label htmlFor=\"password-sign-in\">Password</Label>\n        <TextInput\n          id=\"password-sign-in\"\n          name=\"password-sign-in\"\n          type=\"password\"\n          {...register('password')}\n        />\n        <p className=\"usa-form__note\">\n          <a\n            title=\"Show password\"\n            href=\"#\"\n            className=\"usa-show-password\"\n            aria-controls=\"password-sign-in\"\n            onClick={() => {}}\n          >\n          </a>\n        </p>\n\n        <Button type=\"submit\">Sign in</Button>\n        <p>\n          <a href=\"#\" title=\"Forgot username\">\n            Forgot username?\n          </a>\n        </p>\n        <p>\n          <a href=\"#\" title=\"Forgot password\">\n            Forgot password?\n          </a>\n        </p>\n      </Fieldset>\n    </Form>\n  )\n}\n\nexport default LoginForm;\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":30,"column":14,"nodeType":"50","endLine":30,"endColumn":26},{"ruleId":"48","severity":1,"message":"49","line":59,"column":11,"nodeType":"50","endLine":65,"endColumn":12},{"ruleId":"48","severity":1,"message":"49","line":71,"column":11,"nodeType":"50","endLine":71,"endColumn":47},{"ruleId":"48","severity":1,"message":"49","line":76,"column":11,"nodeType":"50","endLine":76,"endColumn":47},{"ruleId":"48","severity":1,"message":"49","line":30,"column":14,"nodeType":"50","endLine":30,"endColumn":26},{"ruleId":"48","severity":1,"message":"49","line":59,"column":11,"nodeType":"50","endLine":65,"endColumn":12},{"ruleId":"48","severity":1,"message":"49","line":71,"column":11,"nodeType":"50","endLine":71,"endColumn":47},{"ruleId":"48","severity":1,"message":"49","line":76,"column":11,"nodeType":"50","endLine":76,"endColumn":47},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]