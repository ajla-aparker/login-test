{"version":3,"sources":["components/LoginForm.jsx","App.js","index.js"],"names":["validationSchema","Yup","shape","email","required","password","onSubmit","data","console","log","LoginForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","style","large","legend","legendStyle","type","validation","heading","id","isValid","href","message","undefined","htmlFor","name","autoCapitalize","autoCorrect","error","className","title","aria-controls","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAMMA,EAAmBC,MAAaC,MAAM,CAC1CC,MAAOF,MACJG,SAAS,qBACTD,MAAM,oBACTE,SAAUJ,MACPG,SAAS,0BAGRE,EAAW,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,IAuEtBG,EArEG,WAAO,IAAD,UAKlBC,YAAQ,CACVC,SAAUC,YAAYb,KAJtBc,EAFoB,EAEpBA,SACAC,EAHoB,EAGpBA,aACaC,EAJO,EAIpBC,UAAaD,OAKf,OACE,qBAAKE,MAAO,CAAC,cAAe,OAA5B,SACE,cAAC,OAAD,CAAMZ,SAAUS,EAAaT,GAAWa,OAAK,EAA7C,SACE,eAAC,WAAD,CAAUC,OAAO,UAAUC,YAAY,QAAvC,UACE,yDAGCL,EAAOb,OAASa,EAAOX,SAAW,eAAC,QAAD,CAAOiB,KAAK,OAAOC,YAAU,EAACC,QAAQ,oBAAtC,UAC/BR,EAAOb,MAAQ,cAAC,iBAAD,CAAgBsB,GAAG,YAAYC,SAAUV,EAAOb,MAAhD,SACf,mBAAGwB,KAAK,SAAR,mBAAkBX,EAAOb,aAAzB,aAAkB,EAAcyB,iBACdC,EAClBb,EAAOX,SAAW,cAAC,iBAAD,CAAgBoB,GAAG,YAAYC,SAAUV,EAAOX,SAAhD,SAClB,mBAAGsB,KAAK,oBAAR,mBAA6BX,EAAOX,gBAApC,aAA6B,EAAiBuB,iBAC5BC,UACXA,EACX,cAAC,QAAD,CAAOC,QAAQ,QAAf,2BACA,cAAC,YAAD,aACEL,GAAG,QACHM,KAAK,QACLT,KAAK,OACLU,eAAe,MACfC,YAAY,MACZC,MAAOlB,EAAOb,OACVW,EAAS,WAEf,uBAAOI,MAAO,CAAE,MAAS,OAAzB,mBAAmCF,EAAOb,aAA1C,aAAmC,EAAcyB,UACjD,cAAC,QAAD,CAAOE,QAAQ,mBAAf,sBACA,gCACE,cAAC,YAAD,aACEL,GAAG,mBACHM,KAAK,mBACLT,KAAK,WACLY,MAAOlB,EAAOX,UACVS,EAAS,cAEf,uBAAOI,MAAO,CAAE,MAAS,OAAzB,mBAAmCF,EAAOX,gBAA1C,aAAmC,EAAiBuB,UACpD,mBAAGO,UAAU,iBAAb,SACE,mBACEC,MAAM,gBACNT,KAAK,IACLQ,UAAU,oBACVE,gBAAc,mBACdC,QAAS,oBAMf,cAAC,SAAD,CAAQhB,KAAK,SAAb,qBACA,4BACE,mBAAGK,KAAK,IAAIS,MAAM,kBAAlB,wCCnEGG,MANf,WACE,OACE,cAAC,EAAD,KCCJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.c6f9c798.chunk.js","sourcesContent":["import { Alert, Button, Fieldset, Form, Label, TextInput, ValidationItem } from '@trussworks/react-uswds';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport '@trussworks/react-uswds/lib/index.css'\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .required('Email is required')\n    .email('Email is invalid'),\n  password: Yup.string()\n    .required('Password is required')\n});\n\nconst onSubmit = data => console.log(data);\n\nconst LoginForm = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  \n  return (\n    <div style={{\"margin-left\": \"2em\"}}>\n      <Form onSubmit={handleSubmit(onSubmit)} large>\n        <Fieldset legend=\"Sign In\" legendStyle=\"large\">\n          <legend>\n            Access your account\n          </legend>\n          {errors.email || errors.password ? <Alert type=\"info\" validation heading=\"Form Requirements\">\n            { errors.email ? <ValidationItem id=\"uppercase\" isValid={!errors.email}>\n              <a href=\"#email\">{errors.email?.message}</a>\n            </ValidationItem> : undefined }\n            { errors.password ? <ValidationItem id=\"numerical\" isValid={!errors.password}>\n              <a href=\"#password-sign-in\">{errors.password?.message}</a>\n            </ValidationItem> : undefined }\n          </Alert> : undefined}\n          <Label htmlFor=\"email\">Email address</Label>\n          <TextInput\n            id=\"email\"\n            name=\"email\"\n            type=\"text\"\n            autoCapitalize=\"off\"\n            autoCorrect=\"off\"\n            error={errors.email}\n            {...register('email')}\n          />\n          <small style={{ \"color\": \"red\" }}>{errors.email?.message}</small>\n          <Label htmlFor=\"password-sign-in\">Password</Label>\n          <div>\n            <TextInput\n              id=\"password-sign-in\"\n              name=\"password-sign-in\"\n              type=\"password\"\n              error={errors.password}\n              {...register('password')}\n            />\n            <small style={{ \"color\": \"red\" }}>{errors.password?.message}</small>\n            <p className=\"usa-form__note\">\n              <a\n                title=\"Show password\"\n                href=\"#\"\n                className=\"usa-show-password\"\n                aria-controls=\"password-sign-in\"\n                onClick={() => {}}\n              >\n              </a>\n            </p>\n          </div>\n\n          <Button type=\"submit\">Sign in</Button>\n          <p>\n            <a href=\"#\" title=\"Forgot password\">\n              Forgot password?\n            </a>\n          </p>\n        </Fieldset>\n      </Form>\n    </div>\n  )\n}\n\nexport default LoginForm;\n","import LoginForm from './components/LoginForm';\n\nfunction App() {\n  return (\n    <LoginForm />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}