{"version":3,"sources":["components/ValidationAlert.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["ValidationAlert","props","ref","errors","email","password","type","validation","heading","id","isValid","className","href","message","undefined","forwardRef","validationSchema","Yup","shape","required","onSubmit","data","console","log","LoginForm","useForm","resolver","yupResolver","register","handleSubmit","formState","alertRef","useRef","classNames","classnames","useEffect","current","focus","style","large","legend","legendStyle","htmlFor","name","autoCapitalize","autoCorrect","title","aria-controls","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAIMA,EAAkB,SAACC,EAAOC,GAAS,IAAD,IACtC,OACE,8BACID,EAAME,OAAOC,OAASH,EAAME,OAAOE,SAEjC,eAAC,QAAD,CAAOC,KAAK,OAAOC,YAAU,EAACC,QAAQ,oBAAtC,UACIP,EAAME,OAAOC,MAAQ,cAAC,iBAAD,CAAgBK,GAAG,YAAYC,SAAUT,EAAME,OAAOC,MAAtD,SACrB,mBAAGO,UAAU,UAAUC,KAAK,SAASV,IAAKA,EAA1C,mBAAgDD,EAAME,OAAOC,aAA7D,aAAgD,EAAoBS,iBAClDC,EAClBb,EAAME,OAAOE,SAAW,cAAC,iBAAD,CAAgBI,GAAG,YAAYC,SAAUT,EAAME,OAAOE,SAAtD,SACxB,mBAAGM,UAAU,UAAUC,KAAK,oBAAoBV,IAAKD,EAAME,OAAOC,WAAQU,EAAYZ,EAAtF,mBAA4FD,EAAME,OAAOE,gBAAzG,aAA4F,EAAuBQ,iBACjGC,UAEpBA,KAKGC,uBAAWf,GCXpBgB,EAAmBC,MAAaC,MAAM,CAC1Cd,MAAOa,MACJE,SAAS,qBACTf,MAAM,oBACTC,SAAUY,MACPE,SAAS,0BAGRC,EAAW,SAACC,GAChBC,QAAQC,IAAIF,IAoFCG,EAjFG,WAAO,IAAD,MAKlBC,YAAQ,CACVC,SAAUC,YAAYX,KAJtBY,EAFoB,EAEpBA,SACAC,EAHoB,EAGpBA,aACa1B,EAJO,EAIpB2B,UAAa3B,OAKT4B,EAAWC,iBAAO,MAElBC,EAAaC,IACjB,UACA,YACA,CACE,mBAAoB/B,EAAOC,OAASD,EAAOE,WAQ/C,OAJA8B,qBAAU,WAAO,IAAD,EACd,UAAAJ,EAASK,eAAT,SAAkBC,UACjB,CAAClC,IAGF,qBAAKmC,MAAO,CAAC,WAAc,OAA3B,SACE,cAAC,OAAD,CAAMlB,SAAUS,EAAaT,GAAWmB,OAAK,EAA7C,SACE,eAAC,WAAD,CAAUC,OAAO,UAAUC,YAAY,QAAvC,UACE,yDAGA,cAAC,EAAD,CAAiBtC,OAAQA,EAAQD,IAAK6B,IACtC,cAAC,QAAD,CAAOW,QAAQ,QAAf,2BACA,mCACEjC,GAAG,QACHkC,KAAK,QACLrC,KAAK,OACLsC,eAAe,MACfC,YAAY,MACZlC,UAAWsB,EACXK,MAAO,CAAC,QAAW,MACfV,EAAS,WAEf,8BACE,uBAAOU,MAAO,CAAE,MAAS,OAAzB,mBAAmCnC,EAAOC,aAA1C,aAAmC,EAAcS,YAEnD,cAAC,QAAD,CAAO6B,QAAQ,mBAAf,sBACA,gCACE,mCACEjC,GAAG,mBACHkC,KAAK,mBACLrC,KAAK,WACLK,UAAWsB,GACPL,EAAS,cAEf,8BACE,uBAAOU,MAAO,CAAE,MAAS,OAAzB,mBAAmCnC,EAAOE,gBAA1C,aAAmC,EAAiBQ,YAEtD,mBAAGF,UAAU,iBAAb,SACE,mBACEmC,MAAM,gBACNlC,KAAK,IACLD,UAAU,oBACVoC,gBAAc,mBACdC,QAAS,oBAMf,cAAC,SAAD,CAAQ1C,KAAK,SAAb,qBACA,4BACE,mBAAGM,KAAK,IAAIkC,MAAM,kBAAlB,wCCtFGG,MANf,WACE,OACE,cAAC,EAAD,KCCJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7a5db79e.chunk.js","sourcesContent":["import { forwardRef } from 'react';\nimport { Alert, ValidationItem } from '@trussworks/react-uswds';\nimport './LoginForm.css'\n\nconst ValidationAlert = (props, ref) => {\n  return(\n    <div>\n      { props.errors.email || props.errors.password ?\n        (\n          <Alert type=\"info\" validation heading=\"Form Requirements\">\n            { props.errors.email ? <ValidationItem id=\"uppercase\" isValid={!props.errors.email}>\n              <a className='outline' href=\"#email\" ref={ref}>{props.errors.email?.message}</a>\n            </ValidationItem> : undefined }\n            { props.errors.password ? <ValidationItem id=\"numerical\" isValid={!props.errors.password}>\n              <a className='outline' href=\"#password-sign-in\" ref={props.errors.email ? undefined : ref}>{props.errors.password?.message}</a>\n            </ValidationItem> : undefined }\n          </Alert>\n        ) : undefined}\n    </div>\n  )\n};\n\nexport default forwardRef(ValidationAlert);\n","// TODO: Remove rule below once appropriate hrefs are added.\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { useEffect, useRef } from 'react';\nimport { Button, Fieldset, Form, Label } from '@trussworks/react-uswds';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport classnames from 'classnames';\nimport ValidationAlert from './ValidationAlert';\nimport './LoginForm.css';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .required('Email is required')\n    .email('Email is invalid'),\n  password: Yup.string()\n    .required('Password is required')\n});\n\nconst onSubmit = (data) => {\n  console.log(data);\n};\n\nconst LoginForm = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const alertRef = useRef(null);\n\n  const classNames = classnames(\n    'outline',\n    'usa-input',\n    {\n      'usa-input--error': errors.email || errors.password,\n    }\n  )\n\n  useEffect(() => {\n    alertRef.current?.focus();\n  }, [errors])\n  \n  return (\n    <div style={{\"marginLeft\": \"2em\"}}>\n      <Form onSubmit={handleSubmit(onSubmit)} large>\n        <Fieldset legend=\"Sign In\" legendStyle=\"large\">\n          <legend>\n            Access your account\n          </legend>\n          <ValidationAlert errors={errors} ref={alertRef} />\n          <Label htmlFor=\"email\">Email address</Label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"text\"\n            autoCapitalize=\"off\"\n            autoCorrect=\"off\"\n            className={classNames}\n            style={{\"outline\": \"0\"}}\n            {...register('email')}\n          />\n          <div>\n            <small style={{ \"color\": \"red\" }}>{errors.email?.message}</small>\n          </div>\n          <Label htmlFor=\"password-sign-in\">Password</Label>\n          <div>\n            <input\n              id=\"password-sign-in\"\n              name=\"password-sign-in\"\n              type=\"password\"\n              className={classNames}\n              {...register('password')}\n            />\n            <div>\n              <small style={{ \"color\": \"red\" }}>{errors.password?.message}</small>\n            </div>\n            <p className=\"usa-form__note\">\n              <a\n                title=\"Show password\"\n                href=\"#\"\n                className=\"usa-show-password\"\n                aria-controls=\"password-sign-in\"\n                onClick={() => {}}\n              >\n              </a>\n            </p>\n          </div>\n\n          <Button type=\"submit\">Sign in</Button>\n          <p>\n            <a href=\"#\" title=\"Forgot password\">\n              Forgot password?\n            </a>\n          </p>\n        </Fieldset>\n      </Form>\n    </div>\n  )\n}\n\nexport default LoginForm;\n","import LoginForm from './components/LoginForm';\n\nfunction App() {\n  return (\n    <LoginForm />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}